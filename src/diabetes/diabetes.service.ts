import { Injectable } from '@nestjs/common';
import { HttpService } from '@nestjs/axios';
import { PredictRequestDto } from './dto/predict-request.dto';
import { firstValueFrom } from 'rxjs';
import { PrismaService } from 'prisma/prisma.service';
import { DailyNoteDto } from './dto/daily-note.dto';
import { CreateNoteDto } from './dto/create-note.dto';
import { DailyNote } from '@prisma/client';
import { plainToInstance } from 'class-transformer';

@Injectable()
export class DiabetesService {
  constructor(
    private readonly httpService: HttpService,
    private prisma: PrismaService,
  ) {}

  async predictDiabetes(data: PredictRequestDto): Promise<any> {
    try {
      const result = await firstValueFrom(
        this.httpService.post('http://127.0.0.1:8000/predict', data),
      );
      return result.data;
    } catch (error) {
      console.error(
        'üî• FastAPI error:',
        error?.response?.data || error.message,
      );
      throw error;
    }
  }

  private readonly tips: string[] = [
    '‡∏î‡∏∑‡πà‡∏°‡∏ô‡πâ‡∏≥‡∏ß‡∏±‡∏ô‡∏•‡∏∞ 8 ‡πÅ‡∏Å‡πâ‡∏ß‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÑ‡∏ï‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏î‡∏µ üíß',
    '‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 30 ‡∏ô‡∏≤‡∏ó‡∏µ‡∏ï‡πà‡∏≠‡∏ß‡∏±‡∏ô üèÉ‚Äç‚ôÄÔ∏è',
    '‡∏´‡∏•‡∏µ‡∏Å‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•‡πÄ‡∏Å‡∏¥‡∏ô 25g/‡∏ß‡∏±‡∏ô üç∞',
    '‡∏ô‡∏≠‡∏ô‡πÉ‡∏´‡πâ‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏û‡∏≠ 7-9 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á üõå',
    '‡∏á‡∏î‡∏™‡∏π‡∏ö‡∏ö‡∏∏‡∏´‡∏£‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡∏≠‡∏î‡πÅ‡∏Ç‡πá‡∏á‡πÅ‡∏£‡∏á üö≠',
    '‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏ó‡∏≤‡∏ô‡∏ú‡∏±‡∏Å‡∏ú‡∏•‡πÑ‡∏°‡πâ‡πÉ‡∏´‡πâ‡∏´‡∏•‡∏≤‡∏Å‡∏™‡∏µ üåà',
  ];

  getTodayTip(): { tip: string } {
    const index = new Date().getDate() % this.tips.length;
    return { tip: this.tips[index] };
  }

  // daily-notes.service.ts

  async getTodayNotes(): Promise<DailyNoteDto[]> {
    const notes = await this.prisma.dailyNote.findMany({
      where: {
        date: new Date(),
      },
      orderBy: {
        id: 'asc',
      },
    });

    return plainToInstance(DailyNoteDto, notes);
  }

  async addNote(noteDto: CreateNoteDto): Promise<DailyNote> {
    console.log(noteDto, 'noteDtonoteDto');
    return this.prisma.dailyNote.create({
      data: {
        title: '‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏°‡∏ó‡∏µ‡∏°‡∏á‡∏≤‡∏ô',
        description: '‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ß‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡∏á‡∏≤‡∏ô‡πÑ‡∏ï‡∏£‡∏°‡∏≤‡∏™‡∏´‡∏ô‡πâ‡∏≤',
        tags: 'Meeting',
        date: new Date(noteDto.date), // ‚úÖ ‡πÅ‡∏Å‡πâ‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ
        isToday: true,
        done: false,
      },
    });
  }
}
